/*VIM: set ts=2 */
# See http://search.cpan.org/perldoc?Parse::Eyapp::debuggingtut
# See also: Debug.eyp Debug1.eyp Debug2.eyp 
%token D S
%token SEMICOLONS SEMICOLOND

%{
our $VERSION = '0.01';
use base q{DebugTail}; 
%}

%%
p:
    ds SEMICOLONS ss  
  | ss
;

ds:
    D SEMICOLOND ds   
  | D       
    {
      print "Reducing by rule:\n";
      print "\tds -> D\n";
      $_[1];
    }
;

ss:
    S SEMICOLONS ss     
  | S       
;

%%

__PACKAGE__->lexer(
  sub {
    my $self = shift;
    
    for (${$self->input()}) {
       s{^(\s+)}{} and $self->tokenline($1 =~ tr{\n}{});
       return ('',undef) unless $_;

       return ($1,$1) if s/^([sSDd])//;
       return ('SEMICOLOND', 'SEMICOLOND') if s/^;\s*D/D/;
       return ('SEMICOLONS', 'SEMICOLONS') if s/^;\s*S/S/;
       die "Syntax error at line num ${$self->tokenline()}: ${substr($_,0,10)}\n";
    }
    return ('',undef);
  }
);

__PACKAGE__->main unless caller();

# See section 'Hacking the Parsing Tables: ACTION and GOTOs' in
# http://search.cpan.org/perldoc?Parse::Eyapp::debuggingtut
#
# See also: Debug.eyp Debug1.eyp Debug2.eyp  LookForward.eyp
# DynamicallyChangingTheParser.eyp This example illustrates how to dynamically
# change the behavior of the parser

%token D S

%{
our $VERSION = '0.01'; 
use base q{DebugTail};
%}

%tree bypass

# Expect just 1 shift-reduce conflict
%expect 1 

%%
p: %name PROG
    block +
;

block:
    %name BLOCK_DS
    '{' ds ';' ss '}' 
  | %name BLOCK_S
    '{' ss '}'
;

ds:
    %name D2
    D conflict ';' ds    
  | %name D1
    D conflict        
;

ss:
    %name S2
    S ';' ss      
  | %name S1
    S       
;

conflict:
      /* empty. This action solves the conflict using dynamic precedence */
      {
        my $self = shift;

        if (${$self->input()} =~ m{^\s*;\s*S}) {
          $self->YYSetReduce(';', 'D1' )
        }
        else {
          $self->YYSetShift(';', 'D2' )
        }

        undef; # skip this node in the AST
      }
;

%%

__PACKAGE__->main unless caller();

# File PostfixWithActions.eyp
%right  '='
%left   '-' '+'
%left   '*' '/'
%left   NEG

%%
line: $exp  { print "$exp\n" }
;

exp:        $NUM  
                { $NUM }            
        |   $VAR  
                { $VAR }            
        |   %name ASSIGN  
              VAR.left '='exp.right         
                { 
                  # & stands for 'address of'
                  "$_[3] &$_[1] ASSIGN"; 
                }
        |   %name PLUS    
              exp.left '+'exp.right         
                { "$_[1] $_[3] PLUS"; }
        |   %name MINUS   
              exp.left '-'exp.right        
                { "$_[1] $_[3] MINUS"; }
        |   %name TIMES   
              exp.left '*'exp.right       
                { "$_[1] $_[3] TIMES"; }
        |   %name DIV     
              exp.left '/'exp.right      
                { "$_[1] $_[3] DIV"; }
        |   %name NEG '-' $exp %prec NEG 
                { "$exp NEG" }
        |   '(' $exp ')' 
                { $exp }      
;

%%

use base 'Parse::Eyapp::TailSupport';
__PACKAGE__->lexer(\&_Lexer);

sub _Lexer {
  my($parser)=shift;

  for (${$parser->input}) {
    s/^\s+//;

    s/^([0-9]+(?:\.[0-9]+)?)//   and return('NUM',$1);
    s/^([A-Za-z][A-Za-z0-9_]*)// and return('VAR',$1);
    s/^(.)//s                    and return($1,$1);

    return('',undef);
  }
}


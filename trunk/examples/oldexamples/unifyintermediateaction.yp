%%
S:     A
    |  B
;
A : T 'a'
;
B : T 'b'
; 

T:  {
      my $parser = shift;

      if ($parser->YYData->{INPUT} =~ m{^a\s*a}) { 
        print "a\n"; 
      }
      else { print "b\n"; }
    } 'a'
;
%%

sub _Error {
        exists $_[0]->YYData->{ERRMSG}
    and do {
        print $_[0]->YYData->{ERRMSG};
        delete $_[0]->YYData->{ERRMSG};
        return;
    };
    print "Syntax error.\n";
}

sub _Lexer {
    my($parser)=shift;

        $parser->YYData->{INPUT}
    or  return('',undef);

    $parser->YYData->{INPUT}=~s/^[ \t\n]//;

    for ($parser->YYData->{INPUT}) {
        s/^(.)//s and return($1,$1);
    }
}

sub Run {
    my($self)=shift;
    $self->YYData->{INPUT} = <STDIN>;
    $self->YYParse( yylex => \&_Lexer, yyerror => \&_Error, 
                    #yydebug => 0x1F 
    );
}

#my($calc)=new Calc;
#$calc->Run;
